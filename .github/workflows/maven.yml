# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven
permissions:
  contents: write
  checks: write
  pull-requests: write
  statuses: write  

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  unit:
    name: Unit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
          cache: maven
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Build (unit profile)
        run: mvn -B -Punit verify
      - name: Upload coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ github.job }}
          path: '**/target/site/jacoco/jacoco.xml'
      - name: Report unit tests
        if: always()
        uses: dorny/test-reporter@eea8b67eb1fe9a0b1e45b603065ff41056ea5d2c
        with:
          name: Unit Tests
          path: '**/target/surefire-reports/TEST-*.xml'
          reporter: java-junit
      # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
      - name: Update dependency graph
        uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

  web:
    name: Web slice
    runs-on: ubuntu-latest
    needs: [ unit ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
          cache: maven
      - name: Run web tests
        run: mvn -B -Pweb verify
      - name: Upload coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ github.job }}
          path: '**/target/site/jacoco/jacoco.xml'
      - name: Report web tests
        if: always()
        uses: dorny/test-reporter@eea8b67eb1fe9a0b1e45b603065ff41056ea5d2c
        with:
          name: Web Tests
          path: '**/target/surefire-reports/TEST-*.xml'
          reporter: java-junit

  jpa:
    name: JPA slice
    runs-on: ubuntu-latest
    needs: [ unit ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
          cache: maven
      - name: Run jpa tests
        run: mvn -B -Pjpa verify
      - name: Upload coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ github.job }}
          path: '**/target/site/jacoco/jacoco.xml'
      - name: Report jpa tests
        if: always()
        uses: dorny/test-reporter@eea8b67eb1fe9a0b1e45b603065ff41056ea5d2c
        with:
          name: JPA Tests
          path: '**/target/surefire-reports/TEST-*.xml'
          reporter: java-junit

  smoke:
    name: Smoke (IT)
    runs-on: ubuntu-latest
    needs: [ web, jpa ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
          cache: maven
      - name: Run smoke ITs
        run: mvn -B -Psmoke verify
      - name: Upload coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ github.job }}
          path: '**/target/site/jacoco/jacoco.xml'
      - name: Report smoke tests
        if: always()
        uses: dorny/test-reporter@eea8b67eb1fe9a0b1e45b603065ff41056ea5d2c
        with:
          name: Smoke ITs
          path: '**/target/failsafe-reports/TEST-*.xml'
          reporter: java-junit

  e2e:
    name: E2E (IT)
    runs-on: ubuntu-latest
    needs: [ smoke ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
          cache: maven
      # Testcontainers works out-of-the-box on GitHub runners (Docker is preinstalled)
      - name: Run E2E ITs
        run: mvn -B -Pe2e verify
      - name: Upload coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ github.job }}
          path: '**/target/site/jacoco/jacoco.xml'
      - name: Report e2e tests
        if: always()
        uses: dorny/test-reporter@eea8b67eb1fe9a0b1e45b603065ff41056ea5d2c
        with:
          name: E2E ITs
          path: '**/target/failsafe-reports/TEST-*.xml'
          reporter: java-junit

  sonar:
    name: SonarCloud
    runs-on: ubuntu-latest
    needs: [ unit, web, jpa, smoke, e2e ]
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }
      - uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
          cache: maven

      # Sonar cache is optional but nice
      - uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      # download all coverage artifacts
      - uses: actions/download-artifact@v4
        with:
          pattern: coverage-*
          path: coverage

      - name: Run SonarCloud analysis
        if: ${{ (github.ref == 'refs/heads/master') || (github.event_name == 'pull_request' && !github.event.pull_request.head.repo.fork) }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn -B -DskipTests -Djacoco.skip=true -DskipITs -DskipIT=true package
          mvn -B -DskipTests \
            -Dsonar.coverage.jacoco.xmlReportPaths=coverage/**/jacoco.xml \
            org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey=gnitko-andrei_devteam